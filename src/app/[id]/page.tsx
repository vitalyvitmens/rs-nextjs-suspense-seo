//! Seo. 3. Динамические метаданные. Запросы и кэш
//! Внизу в VS-Code нажми на {} рядом с надписью Typescript JSX => Select Version => Use Workspace Version это выберет локальную версию TS а не ту которую предлагает VS-Code

export const generateMetadata = async () => {
  const res = await fetch('http://localhost:8080/metadata', {
    // next: { tags: ['сбросить кэш'] }, // отправляет тег в src\app\metadata\route.ts
    // next: { revalidate: 5 }, // ревалидировать запрос каждые 5 сек
    // cache: 'no-cache', // выключить кэширование
  })
  const data = await res.json()
  return {
    title: data.title,
  }
}

export default function Home() {
  return <main>Content</main>
}

// //! Seo. 2. Статические метаданные
// //! Внизу в VS-Code нажми на {} рядом с надписью Typescript JSX => Select Version => Use Workspace Version это выберет локальную версию TS а не ту которую предлагает VS-Code

// import { Metadata } from 'next'

// export const metadata: Metadata = {
//   title: 'Create Next App from src/app/[id]/page.tsx',
//   description: 'Generated by create next app',
//   viewport: {
//     height: 100,
//   },
// }

// interface Params {
//   id: string
// }

// export default async function Home({ params }: { params: Params }) {
//   const res = await fetch(`https://www.swapi.tech/api/films/${params.id}`)
//   const data = await res.json()

//   return <div>{data.result.properties.title}</div>
// }

// //! 9. Suspense. Серверные компоненты.
// //! Когда Вам важно SEO. Для запуска открой http://localhost:8080/1
// //! Страницы есть от 1 до 6
// //! React RFCs: https://github.com/reactjs/rfcs
// //! Подробнее о серверных компонентах: https://nextjs.org/docs/getting-started/react-essentials#server-components

// interface Params {
//   id: string
// }

// export default async function Home({ params }: { params: Params }) {
//   const res = await fetch(`https://www.swapi.tech/api/films/${params.id}`)
//   const data = await res.json()

//   return <div>{data.result.properties.title}</div>
// }
